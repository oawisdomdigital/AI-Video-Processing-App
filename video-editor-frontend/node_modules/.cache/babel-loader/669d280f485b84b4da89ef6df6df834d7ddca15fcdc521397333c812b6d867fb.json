{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\video_editor\\\\video-editor-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [video, setVideo] = useState(null);\n  const [overlay, setOverlay] = useState(null);\n  const [processedVideo, setProcessedVideo] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [cancelTokenSource, setCancelTokenSource] = useState(null);\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [currentStage, setCurrentStage] = useState(\"\");\n  const videoRef = useRef(null);\n  const beforeVideoRef = useRef(null);\n\n  // Handle file inputs\n  const handleFileChange = e => {\n    setVideo(e.target.files[0]);\n  };\n  const handleOverlayChange = e => {\n    setOverlay(e.target.files[0]);\n  };\n  const validateTime = time => {\n    const regex = /^([0-9]{2}):([0-9]{2}):([0-9]{2})$/;\n    return regex.test(time);\n  };\n  const handleUpload = async () => {\n    if (!video) {\n      toast.error(\"Please upload a video!\");\n      return;\n    }\n    if (startTime && !validateTime(startTime)) {\n      toast.error(\"Invalid start time format. Use HH:MM:SS.\");\n      return;\n    }\n    if (endTime && !validateTime(endTime)) {\n      toast.error(\"Invalid end time format. Use HH:MM:SS.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", video);\n    formData.append(\"start_time\", startTime);\n    formData.append(\"end_time\", endTime);\n    if (overlay) {\n      formData.append(\"overlay\", overlay);\n    }\n    setLoading(true);\n    setProgress(0);\n    const source = axios.CancelToken.source();\n    setCancelTokenSource(source);\n    try {\n      const response = await axios.post(\"http://127.0.0.1:8000/api/videos/upload/\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        },\n        cancelToken: source.token\n      });\n      toast.success(\"Video uploaded successfully! Processing started.\");\n      const videoId = response.data.id;\n      pollProcessingStatus(videoId);\n    } catch (error) {\n      if (axios.isCancel(error)) {\n        toast.info(\"Upload canceled.\");\n      } else {\n        var _error$response;\n        toast.error(\"Error uploading video!\");\n        console.error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      }\n      setLoading(false);\n    }\n  };\n\n  // Poll processing status\n  const pollProcessingStatus = async videoId => {\n    try {\n      const response = await axios.get(`http://127.0.0.1:8000/api/videos/status/${videoId}/`);\n      const {\n        progress: backendProgress,\n        video_url,\n        status,\n        current_stage\n      } = response.data;\n      setCurrentStage(current_stage);\n\n      // Update progress directly from the backend's `progress`\n      const progressToSet = Math.min(Math.max(backendProgress, 0), 100);\n      setProgress(progressToSet);\n\n      // Handle video processing states\n      if (status === \"completed\") {\n        toast.success(\"Processing completed!\");\n        setProcessedVideo(video_url);\n        setLoading(false);\n      } else if (status === \"failed\") {\n        toast.error(\"Processing failed!\");\n        setLoading(false);\n      } else {\n        toast.info(`Current Stage: ${current_stage}`);\n        setTimeout(() => pollProcessingStatus(videoId), 3000); // Continue polling every 3 seconds\n      }\n    } catch (error) {\n      toast.error(\"Error fetching processing status.\");\n      setLoading(false);\n    }\n  };\n\n  // Handle cancel action\n  const handleCancel = () => {\n    if (cancelTokenSource) {\n      cancelTokenSource.cancel(\"Upload canceled by the user.\");\n      setLoading(false);\n      setProgress(0); // Reset progress if canceled\n      toast.info(\"Processing canceled.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Advanced Video Editor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange,\n        accept: \"video/*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleOverlayChange,\n        accept: \"image/*\",\n        placeholder: \"Overlay Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Start Time:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: startTime,\n            onChange: e => setStartTime(e.target.value),\n            placeholder: \"00:00:00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"End Time:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: endTime,\n            onChange: e => setEndTime(e.target.value),\n            placeholder: \"00:00:00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        disabled: loading,\n        children: loading ? \"Processing...\" : \"Upload and Process\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Progress: \", Math.round(progress), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%\",\n          background: \"#ddd\",\n          height: \"20px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: `${progress}%`,\n            background: \"green\",\n            height: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Processing Stage: \", currentStage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-container\",\n      children: [video && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Original Video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: beforeVideoRef,\n          src: URL.createObjectURL(video),\n          controls: true,\n          style: {\n            width: \"100%\",\n            maxWidth: \"600px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this), processedVideo && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Processed Video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          src: `http://127.0.0.1:8000${processedVideo.replace(\"/media\", \"\")}`,\n          controls: true,\n          style: {\n            width: \"100%\",\n            maxWidth: \"600px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"+wOS6UVWj8jq3eH+DFA069Xz02M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","ToastContainer","toast","jsxDEV","_jsxDEV","App","_s","video","setVideo","overlay","setOverlay","processedVideo","setProcessedVideo","loading","setLoading","progress","setProgress","cancelTokenSource","setCancelTokenSource","startTime","setStartTime","endTime","setEndTime","currentStage","setCurrentStage","videoRef","beforeVideoRef","handleFileChange","e","target","files","handleOverlayChange","validateTime","time","regex","test","handleUpload","error","formData","FormData","append","source","CancelToken","response","post","headers","cancelToken","token","success","videoId","data","id","pollProcessingStatus","isCancel","info","_error$response","console","message","get","backendProgress","video_url","status","current_stage","progressToSet","Math","min","max","setTimeout","handleCancel","cancel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","accept","placeholder","value","onClick","disabled","round","style","width","background","height","ref","src","URL","createObjectURL","controls","maxWidth","replace","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/video_editor/video-editor-frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [video, setVideo] = useState(null);\n  const [overlay, setOverlay] = useState(null);\n  const [processedVideo, setProcessedVideo] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [cancelTokenSource, setCancelTokenSource] = useState(null);\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [currentStage, setCurrentStage] = useState(\"\");\n  const videoRef = useRef(null);\n  const beforeVideoRef = useRef(null);\n\n  // Handle file inputs\n  const handleFileChange = (e) => {\n    setVideo(e.target.files[0]);\n  };\n\n  const handleOverlayChange = (e) => {\n    setOverlay(e.target.files[0]);\n  };\n\n  const validateTime = (time) => {\n    const regex = /^([0-9]{2}):([0-9]{2}):([0-9]{2})$/;\n    return regex.test(time);\n  };\n\n  const handleUpload = async () => {\n    if (!video) {\n      toast.error(\"Please upload a video!\");\n      return;\n    }\n\n    if (startTime && !validateTime(startTime)) {\n      toast.error(\"Invalid start time format. Use HH:MM:SS.\");\n      return;\n    }\n\n    if (endTime && !validateTime(endTime)) {\n      toast.error(\"Invalid end time format. Use HH:MM:SS.\");\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"file\", video);\n    formData.append(\"start_time\", startTime);\n    formData.append(\"end_time\", endTime);\n    if (overlay) {\n      formData.append(\"overlay\", overlay);\n    }\n\n    setLoading(true);\n    setProgress(0);\n\n    const source = axios.CancelToken.source();\n    setCancelTokenSource(source);\n\n    try {\n      const response = await axios.post(\n        \"http://127.0.0.1:8000/api/videos/upload/\",\n        formData,\n        {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n          cancelToken: source.token,\n        }\n      );\n\n      toast.success(\"Video uploaded successfully! Processing started.\");\n      const videoId = response.data.id;\n\n      pollProcessingStatus(videoId);\n    } catch (error) {\n      if (axios.isCancel(error)) {\n        toast.info(\"Upload canceled.\");\n      } else {\n        toast.error(\"Error uploading video!\");\n        console.error(error.response?.data || error.message);\n      }\n      setLoading(false);\n    }\n  };\n\n  // Poll processing status\n  const pollProcessingStatus = async (videoId) => {\n    try {\n      const response = await axios.get(\n        `http://127.0.0.1:8000/api/videos/status/${videoId}/`\n      );\n\n      const { progress: backendProgress, video_url, status, current_stage } = response.data;\n\n      setCurrentStage(current_stage);\n\n      // Update progress directly from the backend's `progress`\n      const progressToSet = Math.min(Math.max(backendProgress, 0), 100);\n      setProgress(progressToSet);\n\n      // Handle video processing states\n      if (status === \"completed\") {\n        toast.success(\"Processing completed!\");\n        setProcessedVideo(video_url);\n        setLoading(false);\n      } else if (status === \"failed\") {\n        toast.error(\"Processing failed!\");\n        setLoading(false);\n      } else {\n        toast.info(`Current Stage: ${current_stage}`);\n        setTimeout(() => pollProcessingStatus(videoId), 3000);  // Continue polling every 3 seconds\n      }\n    } catch (error) {\n      toast.error(\"Error fetching processing status.\");\n      setLoading(false);\n    }\n  };\n\n  // Handle cancel action\n  const handleCancel = () => {\n    if (cancelTokenSource) {\n      cancelTokenSource.cancel(\"Upload canceled by the user.\");\n      setLoading(false);\n      setProgress(0);  // Reset progress if canceled\n      toast.info(\"Processing canceled.\");\n    }\n  };\n\n  return (\n    <div className=\"app-container\">\n      <h1>Advanced Video Editor</h1>\n      <div className=\"upload-section\">\n        <input type=\"file\" onChange={handleFileChange} accept=\"video/*\" />\n        <input\n          type=\"file\"\n          onChange={handleOverlayChange}\n          accept=\"image/*\"\n          placeholder=\"Overlay Image\"\n        />\n        <div className=\"time-inputs\">\n          <label>\n            Start Time:\n            <input\n              type=\"text\"\n              value={startTime}\n              onChange={(e) => setStartTime(e.target.value)}\n              placeholder=\"00:00:00\"\n            />\n          </label>\n          <label>\n            End Time:\n            <input\n              type=\"text\"\n              value={endTime}\n              onChange={(e) => setEndTime(e.target.value)}\n              placeholder=\"00:00:00\"\n            />\n          </label>\n        </div>\n        <button onClick={handleUpload} disabled={loading}>\n          {loading ? \"Processing...\" : \"Upload and Process\"}\n        </button>\n        {loading && <button onClick={handleCancel}>Cancel</button>}\n      </div>\n\n      {loading && (\n        <div className=\"progress-bar\">\n          <p>Progress: {Math.round(progress)}%</p>\n          <div style={{ width: \"100%\", background: \"#ddd\", height: \"20px\" }}>\n            <div\n              style={{\n                width: `${progress}%`,\n                background: \"green\",\n                height: \"100%\",\n              }}\n            ></div>\n          </div>\n          <p>Processing Stage: {currentStage}</p>\n        </div>\n      )}\n\n      <div className=\"video-container\">\n        {video && (\n          <div className=\"video-section\">\n            <h2>Original Video</h2>\n            <video\n              ref={beforeVideoRef}\n              src={URL.createObjectURL(video)}\n              controls\n              style={{ width: \"100%\", maxWidth: \"600px\" }}\n            />\n          </div>\n        )}\n\n        {processedVideo && (\n          <div className=\"video-section\">\n            <h2>Processed Video</h2>\n            <video\n              src={`http://127.0.0.1:8000${processedVideo.replace(\"/media\", \"\")}`}\n              controls\n              style={{ width: \"100%\", maxWidth: \"600px\" }}\n            />\n          </div>\n        )}\n      </div>\n\n      <ToastContainer />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,EAAEC,KAAK,QAAQ,gBAAgB;AACtD,OAAO,uCAAuC;AAC9C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACc,cAAc,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACkB,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACoB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAM,CAACsB,SAAS,EAAEC,YAAY,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACwB,OAAO,EAAEC,UAAU,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC0B,YAAY,EAAEC,eAAe,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM4B,QAAQ,GAAG3B,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAM4B,cAAc,GAAG5B,MAAM,CAAC,IAAI,CAAC;;EAEnC;EACA,MAAM6B,gBAAgB,GAAIC,CAAC,IAAK;IAC9BpB,QAAQ,CAACoB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC7B,CAAC;EAED,MAAMC,mBAAmB,GAAIH,CAAC,IAAK;IACjClB,UAAU,CAACkB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC/B,CAAC;EAED,MAAME,YAAY,GAAIC,IAAI,IAAK;IAC7B,MAAMC,KAAK,GAAG,oCAAoC;IAClD,OAAOA,KAAK,CAACC,IAAI,CAACF,IAAI,CAAC;EACzB,CAAC;EAED,MAAMG,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAAC7B,KAAK,EAAE;MACVL,KAAK,CAACmC,KAAK,CAAC,wBAAwB,CAAC;MACrC;IACF;IAEA,IAAIlB,SAAS,IAAI,CAACa,YAAY,CAACb,SAAS,CAAC,EAAE;MACzCjB,KAAK,CAACmC,KAAK,CAAC,0CAA0C,CAAC;MACvD;IACF;IAEA,IAAIhB,OAAO,IAAI,CAACW,YAAY,CAACX,OAAO,CAAC,EAAE;MACrCnB,KAAK,CAACmC,KAAK,CAAC,wCAAwC,CAAC;MACrD;IACF;IAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEjC,KAAK,CAAC;IAC9B+B,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAErB,SAAS,CAAC;IACxCmB,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEnB,OAAO,CAAC;IACpC,IAAIZ,OAAO,EAAE;MACX6B,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAE/B,OAAO,CAAC;IACrC;IAEAK,UAAU,CAAC,IAAI,CAAC;IAChBE,WAAW,CAAC,CAAC,CAAC;IAEd,MAAMyB,MAAM,GAAGzC,KAAK,CAAC0C,WAAW,CAACD,MAAM,CAAC,CAAC;IACzCvB,oBAAoB,CAACuB,MAAM,CAAC;IAE5B,IAAI;MACF,MAAME,QAAQ,GAAG,MAAM3C,KAAK,CAAC4C,IAAI,CAC/B,0CAA0C,EAC1CN,QAAQ,EACR;QACEO,OAAO,EAAE;UAAE,cAAc,EAAE;QAAsB,CAAC;QAClDC,WAAW,EAAEL,MAAM,CAACM;MACtB,CACF,CAAC;MAED7C,KAAK,CAAC8C,OAAO,CAAC,kDAAkD,CAAC;MACjE,MAAMC,OAAO,GAAGN,QAAQ,CAACO,IAAI,CAACC,EAAE;MAEhCC,oBAAoB,CAACH,OAAO,CAAC;IAC/B,CAAC,CAAC,OAAOZ,KAAK,EAAE;MACd,IAAIrC,KAAK,CAACqD,QAAQ,CAAChB,KAAK,CAAC,EAAE;QACzBnC,KAAK,CAACoD,IAAI,CAAC,kBAAkB,CAAC;MAChC,CAAC,MAAM;QAAA,IAAAC,eAAA;QACLrD,KAAK,CAACmC,KAAK,CAAC,wBAAwB,CAAC;QACrCmB,OAAO,CAACnB,KAAK,CAAC,EAAAkB,eAAA,GAAAlB,KAAK,CAACM,QAAQ,cAAAY,eAAA,uBAAdA,eAAA,CAAgBL,IAAI,KAAIb,KAAK,CAACoB,OAAO,CAAC;MACtD;MACA3C,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMsC,oBAAoB,GAAG,MAAOH,OAAO,IAAK;IAC9C,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAM3C,KAAK,CAAC0D,GAAG,CAC9B,2CAA2CT,OAAO,GACpD,CAAC;MAED,MAAM;QAAElC,QAAQ,EAAE4C,eAAe;QAAEC,SAAS;QAAEC,MAAM;QAAEC;MAAc,CAAC,GAAGnB,QAAQ,CAACO,IAAI;MAErF1B,eAAe,CAACsC,aAAa,CAAC;;MAE9B;MACA,MAAMC,aAAa,GAAGC,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,GAAG,CAACP,eAAe,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC;MACjE3C,WAAW,CAAC+C,aAAa,CAAC;;MAE1B;MACA,IAAIF,MAAM,KAAK,WAAW,EAAE;QAC1B3D,KAAK,CAAC8C,OAAO,CAAC,uBAAuB,CAAC;QACtCpC,iBAAiB,CAACgD,SAAS,CAAC;QAC5B9C,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,MAAM,IAAI+C,MAAM,KAAK,QAAQ,EAAE;QAC9B3D,KAAK,CAACmC,KAAK,CAAC,oBAAoB,CAAC;QACjCvB,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,MAAM;QACLZ,KAAK,CAACoD,IAAI,CAAC,kBAAkBQ,aAAa,EAAE,CAAC;QAC7CK,UAAU,CAAC,MAAMf,oBAAoB,CAACH,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC,CAAE;MAC1D;IACF,CAAC,CAAC,OAAOZ,KAAK,EAAE;MACdnC,KAAK,CAACmC,KAAK,CAAC,mCAAmC,CAAC;MAChDvB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMsD,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAInD,iBAAiB,EAAE;MACrBA,iBAAiB,CAACoD,MAAM,CAAC,8BAA8B,CAAC;MACxDvD,UAAU,CAAC,KAAK,CAAC;MACjBE,WAAW,CAAC,CAAC,CAAC,CAAC,CAAE;MACjBd,KAAK,CAACoD,IAAI,CAAC,sBAAsB,CAAC;IACpC;EACF,CAAC;EAED,oBACElD,OAAA;IAAKkE,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BnE,OAAA;MAAAmE,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9BvE,OAAA;MAAKkE,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BnE,OAAA;QAAOwE,IAAI,EAAC,MAAM;QAACC,QAAQ,EAAElD,gBAAiB;QAACmD,MAAM,EAAC;MAAS;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClEvE,OAAA;QACEwE,IAAI,EAAC,MAAM;QACXC,QAAQ,EAAE9C,mBAAoB;QAC9B+C,MAAM,EAAC,SAAS;QAChBC,WAAW,EAAC;MAAe;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,eACFvE,OAAA;QAAKkE,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1BnE,OAAA;UAAAmE,QAAA,GAAO,aAEL,eAAAnE,OAAA;YACEwE,IAAI,EAAC,MAAM;YACXI,KAAK,EAAE7D,SAAU;YACjB0D,QAAQ,EAAGjD,CAAC,IAAKR,YAAY,CAACQ,CAAC,CAACC,MAAM,CAACmD,KAAK,CAAE;YAC9CD,WAAW,EAAC;UAAU;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC,eACRvE,OAAA;UAAAmE,QAAA,GAAO,WAEL,eAAAnE,OAAA;YACEwE,IAAI,EAAC,MAAM;YACXI,KAAK,EAAE3D,OAAQ;YACfwD,QAAQ,EAAGjD,CAAC,IAAKN,UAAU,CAACM,CAAC,CAACC,MAAM,CAACmD,KAAK,CAAE;YAC5CD,WAAW,EAAC;UAAU;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACNvE,OAAA;QAAQ6E,OAAO,EAAE7C,YAAa;QAAC8C,QAAQ,EAAErE,OAAQ;QAAA0D,QAAA,EAC9C1D,OAAO,GAAG,eAAe,GAAG;MAAoB;QAAA2D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC,EACR9D,OAAO,iBAAIT,OAAA;QAAQ6E,OAAO,EAAEb,YAAa;QAAAG,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC,EAEL9D,OAAO,iBACNT,OAAA;MAAKkE,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BnE,OAAA;QAAAmE,QAAA,GAAG,YAAU,EAACP,IAAI,CAACmB,KAAK,CAACpE,QAAQ,CAAC,EAAC,GAAC;MAAA;QAAAyD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACxCvE,OAAA;QAAKgF,KAAK,EAAE;UAAEC,KAAK,EAAE,MAAM;UAAEC,UAAU,EAAE,MAAM;UAAEC,MAAM,EAAE;QAAO,CAAE;QAAAhB,QAAA,eAChEnE,OAAA;UACEgF,KAAK,EAAE;YACLC,KAAK,EAAE,GAAGtE,QAAQ,GAAG;YACrBuE,UAAU,EAAE,OAAO;YACnBC,MAAM,EAAE;UACV;QAAE;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACNvE,OAAA;QAAAmE,QAAA,GAAG,oBAAkB,EAAChD,YAAY;MAAA;QAAAiD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CACN,eAEDvE,OAAA;MAAKkE,SAAS,EAAC,iBAAiB;MAAAC,QAAA,GAC7BhE,KAAK,iBACJH,OAAA;QAAKkE,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BnE,OAAA;UAAAmE,QAAA,EAAI;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvBvE,OAAA;UACEoF,GAAG,EAAE9D,cAAe;UACpB+D,GAAG,EAAEC,GAAG,CAACC,eAAe,CAACpF,KAAK,CAAE;UAChCqF,QAAQ;UACRR,KAAK,EAAE;YAAEC,KAAK,EAAE,MAAM;YAAEQ,QAAQ,EAAE;UAAQ;QAAE;UAAArB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACN,EAEAhE,cAAc,iBACbP,OAAA;QAAKkE,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BnE,OAAA;UAAAmE,QAAA,EAAI;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxBvE,OAAA;UACEqF,GAAG,EAAE,wBAAwB9E,cAAc,CAACmF,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,EAAG;UACpEF,QAAQ;UACRR,KAAK,EAAE;YAAEC,KAAK,EAAE,MAAM;YAAEQ,QAAQ,EAAE;UAAQ;QAAE;UAAArB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAENvE,OAAA,CAACH,cAAc;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEV,CAAC;AAACrE,EAAA,CA9MID,GAAG;AAAA0F,EAAA,GAAH1F,GAAG;AAgNT,eAAeA,GAAG;AAAC,IAAA0F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}