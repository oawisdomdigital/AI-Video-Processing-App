{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{ToastContainer,toast}from'react-toastify';import'react-toastify/dist/ReactToastify.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[video,setVideo]=useState(null);const[processedVideo,setProcessedVideo]=useState(null);const[loading,setLoading]=useState(false);const[progress,setProgress]=useState(0);// Progress percentage\nconst[timeRemaining,setTimeRemaining]=useState(null);// Estimated time remaining\nconst handleFileChange=e=>{setVideo(e.target.files[0]);};const handleUpload=async()=>{if(!video){toast.error('Please upload a video!');return;}const formData=new FormData();formData.append('file',video);setLoading(true);setProgress(0);// Reset progress\nsetTimeRemaining(null);try{// Send the video to the backend for processing\nconst response=await axios.post('http://127.0.0.1:8000/api/videos/upload/',formData,{headers:{'Content-Type':'multipart/form-data'}});toast.success('Video uploaded successfully! Processing started.');const videoId=response.data.id;// Start polling for processing status\npollProcessingStatus(videoId);}catch(error){var _error$response;toast.error('Error uploading video!');console.error(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data)||error.message);}};const pollProcessingStatus=videoId=>{const interval=setInterval(async()=>{try{const response=await axios.get(\"http://127.0.0.1:8000/api/videos/status/\".concat(videoId,\"/\"));const{progress,estimated_time_remaining,video_url,status}=response.data;// Update progress and time remaining\nsetProgress(progress);setTimeRemaining(estimated_time_remaining);// If processing is complete, stop polling\nif(status==='completed'){clearInterval(interval);toast.success('Processing completed successfully!');setProcessedVideo(video_url);setLoading(false);}}catch(error){console.error('Error fetching processing status:',error);clearInterval(interval);// Stop polling on error\ntoast.error('Error fetching processing status.');setLoading(false);}},3000);// Poll every 3 seconds\n};return/*#__PURE__*/_jsxs(\"div\",{style:{padding:'20px'},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Video Editor\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",onChange:handleFileChange,accept:\"video/mp4,video/x-m4v,video/*\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleUpload,disabled:loading,style:{marginTop:'10px'},children:loading?'Processing...':'Upload and Process'}),loading&&/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'20px'},children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Processing Progress: \",progress,\"%\"]}),timeRemaining&&/*#__PURE__*/_jsxs(\"p\",{children:[\"Estimated Time Remaining: \",timeRemaining,\" seconds\"]})]}),processedVideo&&/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'20px'},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Processed Video:\"}),/*#__PURE__*/_jsxs(\"video\",{controls:true,style:{maxWidth:'100%'},children:[/*#__PURE__*/_jsx(\"source\",{src:\"http://127.0.0.1:8000\".concat(processedVideo),type:\"video/mp4\"}),\"Your browser does not support the video tag.\"]})]}),/*#__PURE__*/_jsx(ToastContainer,{})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","axios","ToastContainer","toast","jsx","_jsx","jsxs","_jsxs","App","video","setVideo","processedVideo","setProcessedVideo","loading","setLoading","progress","setProgress","timeRemaining","setTimeRemaining","handleFileChange","e","target","files","handleUpload","error","formData","FormData","append","response","post","headers","success","videoId","data","id","pollProcessingStatus","_error$response","console","message","interval","setInterval","get","concat","estimated_time_remaining","video_url","status","clearInterval","style","padding","children","type","onChange","accept","onClick","disabled","marginTop","controls","maxWidth","src"],"sources":["C:/Users/USER/Desktop/video_editor/video-editor-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst App = () => {\n  const [video, setVideo] = useState(null);\n  const [processedVideo, setProcessedVideo] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [progress, setProgress] = useState(0); // Progress percentage\n  const [timeRemaining, setTimeRemaining] = useState(null); // Estimated time remaining\n\n  const handleFileChange = (e) => {\n    setVideo(e.target.files[0]);\n  };\n\n  const handleUpload = async () => {\n    if (!video) {\n      toast.error('Please upload a video!');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', video);\n\n    setLoading(true);\n    setProgress(0); // Reset progress\n    setTimeRemaining(null);\n\n    try {\n      // Send the video to the backend for processing\n      const response = await axios.post('http://127.0.0.1:8000/api/videos/upload/', formData, {\n        headers: { 'Content-Type': 'multipart/form-data' },\n      });\n\n      toast.success('Video uploaded successfully! Processing started.');\n      const videoId = response.data.id;\n\n      // Start polling for processing status\n      pollProcessingStatus(videoId);\n    } catch (error) {\n      toast.error('Error uploading video!');\n      console.error(error.response?.data || error.message);\n    }\n  };\n\n  const pollProcessingStatus = (videoId) => {\n    const interval = setInterval(async () => {\n      try {\n        const response = await axios.get(`http://127.0.0.1:8000/api/videos/status/${videoId}/`);\n        const { progress, estimated_time_remaining, video_url, status } = response.data;\n\n        // Update progress and time remaining\n        setProgress(progress);\n        setTimeRemaining(estimated_time_remaining);\n\n        // If processing is complete, stop polling\n        if (status === 'completed') {\n          clearInterval(interval);\n          toast.success('Processing completed successfully!');\n          setProcessedVideo(video_url);\n          setLoading(false);\n        }\n      } catch (error) {\n        console.error('Error fetching processing status:', error);\n        clearInterval(interval); // Stop polling on error\n        toast.error('Error fetching processing status.');\n        setLoading(false);\n      }\n    }, 3000); // Poll every 3 seconds\n  };\n\n  return (\n    <div style={{ padding: '20px' }}>\n      <h1>Video Editor</h1>\n\n      {/* File input for video */}\n      <input type=\"file\" onChange={handleFileChange} accept=\"video/mp4,video/x-m4v,video/*\" />\n\n      {/* Upload button */}\n      <button onClick={handleUpload} disabled={loading} style={{ marginTop: '10px' }}>\n        {loading ? 'Processing...' : 'Upload and Process'}\n      </button>\n\n      {/* Show progress and time remaining */}\n      {loading && (\n        <div style={{ marginTop: '20px' }}>\n          <p>Processing Progress: {progress}%</p>\n          {timeRemaining && <p>Estimated Time Remaining: {timeRemaining} seconds</p>}\n        </div>\n      )}\n\n      {/* Display processed video */}\n      {processedVideo && (\n        <div style={{ marginTop: '20px' }}>\n          <h3>Processed Video:</h3>\n          <video controls style={{ maxWidth: '100%' }}>\n            <source src={`http://127.0.0.1:8000${processedVideo}`} type=\"video/mp4\" />\n            Your browser does not support the video tag.\n          </video>\n        </div>\n      )}\n\n      {/* Toast container for notifications */}\n      <ToastContainer />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,OAASC,cAAc,CAAEC,KAAK,KAAQ,gBAAgB,CACtD,MAAO,uCAAuC,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE/C,KAAM,CAAAC,GAAG,CAAGA,CAAA,GAAM,CAChB,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGX,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAACY,cAAc,CAAEC,iBAAiB,CAAC,CAAGb,QAAQ,CAAC,IAAI,CAAC,CAC1D,KAAM,CAACc,OAAO,CAAEC,UAAU,CAAC,CAAGf,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAACgB,QAAQ,CAAEC,WAAW,CAAC,CAAGjB,QAAQ,CAAC,CAAC,CAAC,CAAE;AAC7C,KAAM,CAACkB,aAAa,CAAEC,gBAAgB,CAAC,CAAGnB,QAAQ,CAAC,IAAI,CAAC,CAAE;AAE1D,KAAM,CAAAoB,gBAAgB,CAAIC,CAAC,EAAK,CAC9BV,QAAQ,CAACU,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAC7B,CAAC,CAED,KAAM,CAAAC,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC/B,GAAI,CAACd,KAAK,CAAE,CACVN,KAAK,CAACqB,KAAK,CAAC,wBAAwB,CAAC,CACrC,OACF,CAEA,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,CAAElB,KAAK,CAAC,CAE9BK,UAAU,CAAC,IAAI,CAAC,CAChBE,WAAW,CAAC,CAAC,CAAC,CAAE;AAChBE,gBAAgB,CAAC,IAAI,CAAC,CAEtB,GAAI,CACF;AACA,KAAM,CAAAU,QAAQ,CAAG,KAAM,CAAA3B,KAAK,CAAC4B,IAAI,CAAC,0CAA0C,CAAEJ,QAAQ,CAAE,CACtFK,OAAO,CAAE,CAAE,cAAc,CAAE,qBAAsB,CACnD,CAAC,CAAC,CAEF3B,KAAK,CAAC4B,OAAO,CAAC,kDAAkD,CAAC,CACjE,KAAM,CAAAC,OAAO,CAAGJ,QAAQ,CAACK,IAAI,CAACC,EAAE,CAEhC;AACAC,oBAAoB,CAACH,OAAO,CAAC,CAC/B,CAAE,MAAOR,KAAK,CAAE,KAAAY,eAAA,CACdjC,KAAK,CAACqB,KAAK,CAAC,wBAAwB,CAAC,CACrCa,OAAO,CAACb,KAAK,CAAC,EAAAY,eAAA,CAAAZ,KAAK,CAACI,QAAQ,UAAAQ,eAAA,iBAAdA,eAAA,CAAgBH,IAAI,GAAIT,KAAK,CAACc,OAAO,CAAC,CACtD,CACF,CAAC,CAED,KAAM,CAAAH,oBAAoB,CAAIH,OAAO,EAAK,CACxC,KAAM,CAAAO,QAAQ,CAAGC,WAAW,CAAC,SAAY,CACvC,GAAI,CACF,KAAM,CAAAZ,QAAQ,CAAG,KAAM,CAAA3B,KAAK,CAACwC,GAAG,4CAAAC,MAAA,CAA4CV,OAAO,KAAG,CAAC,CACvF,KAAM,CAAEjB,QAAQ,CAAE4B,wBAAwB,CAAEC,SAAS,CAAEC,MAAO,CAAC,CAAGjB,QAAQ,CAACK,IAAI,CAE/E;AACAjB,WAAW,CAACD,QAAQ,CAAC,CACrBG,gBAAgB,CAACyB,wBAAwB,CAAC,CAE1C;AACA,GAAIE,MAAM,GAAK,WAAW,CAAE,CAC1BC,aAAa,CAACP,QAAQ,CAAC,CACvBpC,KAAK,CAAC4B,OAAO,CAAC,oCAAoC,CAAC,CACnDnB,iBAAiB,CAACgC,SAAS,CAAC,CAC5B9B,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAE,MAAOU,KAAK,CAAE,CACda,OAAO,CAACb,KAAK,CAAC,mCAAmC,CAAEA,KAAK,CAAC,CACzDsB,aAAa,CAACP,QAAQ,CAAC,CAAE;AACzBpC,KAAK,CAACqB,KAAK,CAAC,mCAAmC,CAAC,CAChDV,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAAE,IAAI,CAAC,CAAE;AACZ,CAAC,CAED,mBACEP,KAAA,QAAKwC,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAO,CAAE,CAAAC,QAAA,eAC9B5C,IAAA,OAAA4C,QAAA,CAAI,cAAY,CAAI,CAAC,cAGrB5C,IAAA,UAAO6C,IAAI,CAAC,MAAM,CAACC,QAAQ,CAAEhC,gBAAiB,CAACiC,MAAM,CAAC,+BAA+B,CAAE,CAAC,cAGxF/C,IAAA,WAAQgD,OAAO,CAAE9B,YAAa,CAAC+B,QAAQ,CAAEzC,OAAQ,CAACkC,KAAK,CAAE,CAAEQ,SAAS,CAAE,MAAO,CAAE,CAAAN,QAAA,CAC5EpC,OAAO,CAAG,eAAe,CAAG,oBAAoB,CAC3C,CAAC,CAGRA,OAAO,eACNN,KAAA,QAAKwC,KAAK,CAAE,CAAEQ,SAAS,CAAE,MAAO,CAAE,CAAAN,QAAA,eAChC1C,KAAA,MAAA0C,QAAA,EAAG,uBAAqB,CAAClC,QAAQ,CAAC,GAAC,EAAG,CAAC,CACtCE,aAAa,eAAIV,KAAA,MAAA0C,QAAA,EAAG,4BAA0B,CAAChC,aAAa,CAAC,UAAQ,EAAG,CAAC,EACvE,CACN,CAGAN,cAAc,eACbJ,KAAA,QAAKwC,KAAK,CAAE,CAAEQ,SAAS,CAAE,MAAO,CAAE,CAAAN,QAAA,eAChC5C,IAAA,OAAA4C,QAAA,CAAI,kBAAgB,CAAI,CAAC,cACzB1C,KAAA,UAAOiD,QAAQ,MAACT,KAAK,CAAE,CAAEU,QAAQ,CAAE,MAAO,CAAE,CAAAR,QAAA,eAC1C5C,IAAA,WAAQqD,GAAG,yBAAAhB,MAAA,CAA0B/B,cAAc,CAAG,CAACuC,IAAI,CAAC,WAAW,CAAE,CAAC,+CAE5E,EAAO,CAAC,EACL,CACN,cAGD7C,IAAA,CAACH,cAAc,GAAE,CAAC,EACf,CAAC,CAEV,CAAC,CAED,cAAe,CAAAM,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}